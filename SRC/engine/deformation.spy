# -*- python -*-

# This software was produced by NIST, an agency of the U.S. government,
# and by statute is not subject to copyright in the United States.
# Recipients of this software assume all responsibilities associated
# with its operation, modification and maintenance. However, to
# facilitate maintenance we ask that before distributing modified
# versions of this software, you first contact the authors at
# oof_manager@nist.gov. 

from ooflib.SWIG.engine import fieldindex
from ooflib.SWIG.engine import planarity
from ooflib.SWIG.engine import smallmatrix3
from ooflib.SWIG.engine.IO import propertyoutput
from ooflib.common import debug
from ooflib.common import enum
from ooflib.common import registeredclass
from ooflib.common.IO import parameter

class DeformationType(registeredclass.RegisteredClass):
    registry = []
    def name(self):
        return self._name
    def iterator(self):
        return fieldindex.getTensorIterator()
    def newOutputValue(self):
        return smallmatrix3.newSmallMatrix3OutputValue()
    tip="Tip coming soon."
    discussion="""<para>
    <classname>DeformationType</classname> objects are used to pick
    deformation varieties.
    </para>"""
 


class GeometricDeformation(DeformationType):
    _name="Geometric"

registeredclass.Registration(
    "Geometric Deformation",
    DeformationType,
    GeometricDeformation,
    ordering=0,
    tip="The F matrix of the displaced system.",
    discussion="""<para>This is mostly really a stunt class to demo the 
    class hierarchy.""")
    

class DeformationTypeParameter(parameter.RegisteredParameter):
    def __init__(self, name, value=None, default=None, tip=None, auxData={}):
        parameter.RegisteredParameter.__init__(self,name, DeformationType,
                                               value, default, tip, auxData)
    def clone(self):
        return DeformationTypeParameter(self.name, self.value,
                                        self.defaut, self.tip)

    
