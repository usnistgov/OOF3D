# -*- python -*-

# This software was produced by NIST, an agency of the U.S. government,
# and by statute is not subject to copyright in the United States.
# Recipients of this software assume all responsibilities associated
# with its operation, modification and maintenance. However, to
# facilitate maintenance we ask that before distributing modified
# versions of this software, you first contact the authors at
# oof_manager@nist.gov. 

# Crystal plasticity.

from ooflib.engine import propertyregistration
from ooflib.engine import problem
from ooflib.engine.IO import anisocijkl
from ooflib.common.IO import parameter

# We will need constitutive rules, import them here.
# Also the parameter comes from here, but this is not actually a
# good idea, it should be in an IO directory, probably.  TODO.
from ooflib.SWIG.engine.property.plasticity.constitutive import constitutive

PropertyRegistration = propertyregistration.PropertyRegistration


reg = PropertyRegistration(
    'Mechanical:Plasticity:FCCPlasticity', FCCPlasticity,
    "ooflib.SWIG.engine.property.plasticity.plasticity",17,
    [anisocijkl.CubicCijklParameter(
        'cijkl', anisocijkl.CubicRank4TensorCij(c11=1.0,
                                                c12=0.5,
                                                c44=0.25),
        tip=parameter.emptyTipString),
     parameter.RegisteredParameter('constitutive rule',
                                   constitutive.PlasticConstitutiveRule,
                                   constitutive.PowerLawConstitutiveRule(
                                       1.0,1.4,3.771e8,1.115,
                                       1.501e9,0.01,2.453e7,1.706e8))
    ],
    outputs=[],
    propertyType="Plasticity",
    discussion=None)

reg.fluxInfo(fluxes=[problem.Stress], fields=[problem.Displacement],
             time_derivs=[0])


