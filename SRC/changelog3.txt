// -*- text -*-
// $RCSfile: changelog3.txt,v $
// $Revision: 1.1.2.5 $
// $Author: langer $
// $Date: 2015/07/24 18:05:33 $

/* This software was produced by NIST, an agency of the U.S. government,
 * and by statute is not subject to copyright in the United States.
 * Recipients of this software assume all responsibilities associated
 * with its operation, modification and maintenance. However, to
 * facilitate maintenance we ask that before distributing modified
 * versions of this software, you first contact the authors at
 * oof_manager@nist.gov. 
 */

3.2.4

Compatibility with VTK 9.

Changed some of the regression tests so that they use png files
instead of jpeg.  Jpeg libraries aren't standard, apparently, and
tests that relied on voxel values weren't portable.

3.2.3

Almost all material properties can now be included in output files
using a new Material Constants branch of the Outputs tree.

More than one type of output can be printed on one line of an output
file, by using the Concatenate output.

Removed a debugging line that is rejected by new compilers.
  
3.2.2

Changes for compatibility with VTK 8.2.0.

Changes for compatibility with macOS 10.14 Mojave.

Minor changes for compatibility with gcc 8.2.0.

Voxel/Tet intersection code is now in a stand-alone subdirectory and
templated for general use.

The graphics window can be saved in PDF format.

Saving large Meshes in Abaqus format is much faster in some
situations.  The slow bits now have progress bars.

3.2.1

Fixed a few problems in the tutorials, and updated some of them.

Skeleton selection displays are updated during annealing and other
iterative skeleton modifications.

After cancelling the Box voxel selector, image opacity is restored
correctly.

Fixed a warning when deselecting a boundary in the Skeleton Boundary page.

3.2.0

Fixed a bug that was making the Microstructure recalculate voxel
categories far too often.

Added the Relax Skeleton modifier.

Added a RefinementTarget to split the long edges of a Skeleton
element.

Loading Skeleton node and element selections from data files is now
much faster.

Fixed a bug that was preventing compilation on gcc 7.

Modified the "Tumble" method, so that objects are rotated about the
center of the visible region if "shift" is pressed when clicking the
mouse.  If "control" is pressed, objects are rotated around the focal
point.  If neither is pressed, the previous pivot point is used.

Fixed a bug with the "Recenter" button in the Translate group in the
Viewer toolbox.

Fixed a bug that was making the Material Color display layer for
Microstructures show incorrect colors.

Fixed a bug in saving 3D images as a set of files.

Upgraded vtk from 5.10.1 to 7.1.1.  Probably everybody will need to
build vtk by hand now.  Apple users should build vtk to use Cocoa
instead of X11 and build oof3d with the --cocoa argument.

Fixed the Threshold function for images.

Fixed a bug in the widgets for choosing Skeleton groups when used as
command arguments. 

Fixed errors in updating filtered skeleton and mesh displays.

Fixed the pixel, skeleton, and mesh info displays.

Right-clicking on the layer list in the graphics window brings up the
layer editing menu.  Layers can be rearranged by drag and drop on the
list (but maybe not reliably on macOS).

Added a interactive method for selecting a rectangular region of
voxels.  Restructured the various Select menu commands so that the new
method fits more naturally.   Now all selections are made in the main
menu, like this:
   OOF.ElementSelection.Select(skeleton='ms:skel', method=...)
instead of begin split between teh main menu and a graphics toolbox
menu.  The commands now refer explicitly to the objects being
selected, instead of containing cryptic information about the mouse
position and view parameters.

Much faster abaqus output from Meshes, again.

The default parameters for new clipping planes put the plane in a more
sensible location.  Fixed a bug in the positioning of new planes whose
normals weren't in the +x direction.

Fixed a bug that made the clipping plane widget unresponsive after a
plane was deleted.

3.1.2

Fixed a bug that was making the Microstructure recalculate voxel
categories far too often.

Saving a large Mesh in abaqus format is now much faster.

Fixed a race condition that could cause errors if a Mesh was created
while its Skeleton was still computing its homogeneity.

Fixed a bug that generated warning messages when drawing the
coordinate axes if a Microstructure had a large aspect ratio.

Fixed a bug that made it impossible to save files after loading images
using the "Listed Files" option.

Improved initial parameters for clipping planes.

3.1.2

Fixed errors that made saving a large Mesh in abaqus format take far
too long, and also moved the bulk of the code from Python to C++.

Fixed an error that made creating a large Skeleton take too long
because it was recalculating the homogeneity unnecessarily.

Fixed a race condition that caused problems when a Mesh was created
before its Skeleton had finished computing its homogeneity.

Fixed a bug in which the coordinate axes were drawn badly if a
Microstructure had an extreme aspect ratio.

3.1.1.1

Minor changes to make the old gcc 4.7 compilers happy.

3.1.1

Much faster element homogeneity calculation by dividing the
Microstructure into subregions to limit the size of the graphs.

Fixed a possible infinite loop in the homogeneity calculation.

Fixed the abaqus output for Skeletons and Meshes.  It still needs to
be tested by a real abaqus user.

3.1.0

Fixed the filters for limiting display layers to particular voxel or
skeleton groups.  They now update properly when the underlying groups
are modified.

Fixed a bug in which voxels that had been removed from a voxel group
could be still considered part of the group.  The cross-referencing
had not been fully updated.

"Fix Illegal Elements" now does a better job with elements that have
nodes on external faces of the microstructure, and the status of fixed
Skeletons is correctly displayed in the GUI.

Fixed a bug that was causing the Skeleton homogeneity to be recomputed
after some Undo and Redo operations.

Fixed the behavior of the progress bars when automatically creating
voxel groups. They weren't able to interrupt long computations
effectively.

Added quadratic tetrahedral elements.

Implemented a new and vastly superior method for calculating element
homogeneity.  It's faster and more robust.

Fixed a bug involving cloning graphics windows with hidden display
layers.

Fixed a bug that prevented the analysis page from retrieving stored
analyses. 

The setup.py script now understands '~' in vtkdir arguments.

Fixed the "Copy All" command for copying solvers from one Mesh to another.

3.0.1

The interval parameter for output schedules now can't be set to zero,
and the delay can't be negative.

Fixed a bug in setup.py wrt --with-swig.

Fixed setup.py so that it understands "linux3".

If a mesh is saved while it's being solved, its saved status is stored
as "Unsolved" rather than "Solving".

Field initializers can now be copied.

Graphics windows are cleared properly when objects are deleted.

Fixed the bug that was causing the skeleton material display to be
incorrect sometimes.

Fixed the skeleton quality display.

Fixed an error in the calculation of the tetrahedron shape energy.
